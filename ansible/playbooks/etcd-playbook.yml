---
- name: Install and Configure ETCD Cluster for Kubernetes
  hosts: etcd
  become: true
  serial: 1  # Deploy to one node at a time for cluster formation

  vars:
    etcd_nodes: "{{ groups['etcd'] }}"
    etcd_cluster_members: |
      {% set members = [] %}
      {% for host in groups['etcd'] %}
      {% set _ = members.append(host + '=https://' + hostvars[host]['ansible_host'] + ':2380') %}
      {% endfor %}
      {{ members | join(',') }}

  pre_tasks:
    - name: Set etcd_initial_cluster variable
      set_fact:
        etcd_initial_cluster: "{{ etcd_cluster_members }}"
        etcd_initial_cluster_state: "new"

    - name: Display cluster configuration
      debug:
        msg: "ETCD Cluster Members: {{ etcd_initial_cluster }}"

  roles:
    - etcd

  post_tasks:
    - name: Wait for cluster to stabilize
      pause:
        seconds: 10

    - name: Verify cluster members
      command: >
        /usr/local/bin/etcdctl --endpoints=https://{{ ansible_host }}:2379
        --cacert=/etc/ssl/etcd/ca.crt
        --cert=/etc/ssl/etcd/server.crt
        --key=/etc/ssl/etcd/server.key
        member list
      register: cluster_members
      changed_when: false

    - name: Display cluster members
      debug:
        msg: "{{ cluster_members.stdout }}"

    - name: Test cluster connectivity
      command: >
        /usr/local/bin/etcdctl --endpoints=https://{{ ansible_host }}:2379
        --cacert=/etc/ssl/etcd/ca.crt
        --cert=/etc/ssl/etcd/server.crt
        --key=/etc/ssl/etcd/server.key
        put test_key "ETCD cluster is working!"
      changed_when: false

    - name: Verify test key
      command: >
        /usr/local/bin/etcdctl --endpoints=https://{{ ansible_host }}:2379
        --cacert=/etc/ssl/etcd/ca.crt
        --cert=/etc/ssl/etcd/server.crt
        --key=/etc/ssl/etcd/server.key
        get test_key
      register: test_result
      changed_when: false

    - name: Display test result
      debug:
        msg: "ETCD Test Result: {{ test_result.stdout }}"
