---
- name: Deploy Kubernetes Master Nodes
  hosts: masters
  become: true
  gather_facts: true
  # Running from bastion host - direct SSH connections to private IPs
  
  pre_tasks:
    - name: Wait for hosts to be available
      wait_for_connection:
        timeout: 300
        sleep: 5

    - name: Gather facts after connection
      setup:

    - name: Verify ETCD cluster is accessible via HAProxy
      wait_for:
        host: "{{ hostvars['lb'].ansible_host }}"
        port: 2379
        timeout: 10
      delegate_to: localhost
      run_once: true

    - name: Verify HAProxy ETCD backend is responding
      shell: "telnet {{ hostvars['lb'].ansible_host }} 2379 < /dev/null"
      register: etcd_telnet_test
      delegate_to: localhost
      run_once: true
      changed_when: false
      failed_when: false

    - name: Display ETCD connectivity status
      debug:
        msg: "ETCD cluster is accessible through HAProxy at {{ hostvars['lb'].ansible_host }}:2379"
      when: etcd_telnet_test.rc == 0
      run_once: true

  roles:
    - kubernetes-master

  post_tasks:
    - name: Wait for K3S API server to be ready
      uri:
        url: "https://{{ ansible_default_ipv4.address }}:6443/healthz"
        method: GET
        validate_certs: no
        timeout: 10
      register: api_health_check
      retries: 12
      delay: 10
      until: api_health_check.status == 200
      ignore_errors: true

    - name: Verify cluster status from first master
      shell: |
        export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
        k3s kubectl get nodes -o wide
      register: cluster_status
      when: inventory_hostname == groups['masters'][0]
      
    - name: Display cluster status
      debug:
        msg: "{{ cluster_status.stdout_lines }}"
      when: 
        - inventory_hostname == groups['masters'][0]
        - cluster_status is defined

    - name: Verify ETCD connectivity from masters
      shell: |
        curl -k --cert /etc/pki/k3s/server.crt --key /etc/pki/k3s/server.key --cacert /etc/pki/k3s/etcd-ca.crt \
        https://{{ hostvars['lb'].ansible_host }}:2379/health
      register: etcd_health
      
    - name: Display ETCD health from masters
      debug:
        msg: "ETCD Health from {{ inventory_hostname }}: {{ etcd_health.stdout }}"

- name: Update HAProxy configuration for new masters
  hosts: load_balancer
  become: true
  # Running from bastion host - direct SSH connections to private IPs
  
  tasks:
    - name: Restart HAProxy to pick up master nodes
      systemd:
        name: haproxy
        state: restarted
        
    - name: Verify HAProxy status
      systemd:
        name: haproxy
        state: started
      register: haproxy_status
      
    - name: Check HAProxy stats
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:8399/stats_secure"
        method: GET
        user: admin
        password: omar123
        timeout: 10
      register: haproxy_stats
      ignore_errors: true
      
    - name: Display HAProxy status
      debug:
        msg: "HAProxy is {{ haproxy_status.state }} - Stats available at http://{{ hostvars['lb'].ansible_host }}:8399/stats_secure"