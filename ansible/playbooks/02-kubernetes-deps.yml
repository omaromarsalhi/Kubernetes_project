---
- name: Install Kubernetes Dependencies - Amazon Linux 2023
  hosts: kubernetes
  become: true
  vars:
    ansible_ssh_common_args: '-o ProxyCommand="ssh -W %h:%p -q ec2-user@{{ hostvars["bastion-host"]["ansible_host"] }} -i /home/ec2-user/.ssh/id_rsa -o StrictHostKeyChecking=no"'
    kubernetes_version: "1.28.2"
  tasks:
    - name: Add Kubernetes repository for Amazon Linux 2023
      copy:
        content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
          enabled=1
          gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
          exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
        dest: /etc/yum.repos.d/kubernetes.repo
        mode: '0644'

    - name: Import Kubernetes GPG key
      rpm_key:
        state: present
        key: https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key

    - name: Update package cache for Amazon Linux 2023
      dnf:
        update_cache: true

    - name: Install Kubernetes components
      dnf:
        name:
          - kubelet-{{ kubernetes_version }}
          - kubeadm-{{ kubernetes_version }}
          - kubectl-{{ kubernetes_version }}
        state: present
        disable_excludes: kubernetes

    - name: Install dnf-plugin-versionlock (Amazon Linux 2023)
      dnf:
        name: python3-dnf-plugin-versionlock
        state: present

    - name: Hold Kubernetes packages
      command: dnf versionlock add kubelet kubeadm kubectl
      ignore_errors: true

    - name: Configure kubelet
      copy:
        content: |
          KUBELET_EXTRA_ARGS=--node-ip={{ ansible_default_ipv4.address }}
        dest: /etc/sysconfig/kubelet
        mode: '0644'

    - name: Enable kubelet service
      systemd:
        name: kubelet
        enabled: true

    - name: Pull Kubernetes images (masters only)
      command: kubeadm config images pull
      when: kubernetes_role == "master"

    - name: Verify Docker is running
      systemd:
        name: docker
        state: started

    - name: Verify kubelet is enabled
      systemd:
        name: kubelet
        enabled: true

    - name: Display installation status
      debug:
        msg: |
          âœ… Kubernetes {{ kubernetes_version }} components installed successfully on {{ inventory_hostname }}
          - kubelet: enabled
          - kubeadm: installed
          - kubectl: installed
          - Docker: running
