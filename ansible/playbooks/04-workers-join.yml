
---
- name: Join Worker Nodes to Kubernetes Cluster
  hosts: workers
  become: true
  vars:
    ansible_ssh_common_args: '-o ProxyCommand="ssh -W %h:%p -q ec2-user@{{ hostvars["bastion-host"]["ansible_host"] }} -i /home/ec2-user/.ssh/id_rsa -o StrictHostKeyChecking=no"'
  tasks:
    - name: Check if node is already joined
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: kubelet_conf

    - name: Get master node IP dynamically
      set_fact:
        master_ip: "{{ hostvars[groups['masters'][0]]['ansible_default_ipv4']['address'] }}"
      delegate_to: "{{ groups['masters'][0] }}"
      run_once: true

    - name: Test connectivity to master API server
      wait_for:
        host: "{{ master_ip }}"
        port: 6443
        timeout: 10
      register: connectivity_test
      ignore_errors: true

    - name: Display connectivity test result
      debug:
        msg: "API server connectivity: {{ 'SUCCESS' if connectivity_test is succeeded else 'FAILED - Check network/security groups' }}"

    - name: Ensure required services are running
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Clean up any previous failed attempts
      shell: |
        kubeadm reset -f
        rm -rf /etc/kubernetes/
        rm -rf /var/lib/kubelet/
        systemctl stop kubelet
        sleep 5
        systemctl start kubelet
      when: not kubelet_conf.stat.exists
      ignore_errors: true

    - name: Wait for kubelet to restart
      systemd:
        name: kubelet
        state: started
      when: not kubelet_conf.stat.exists

    - name: Read join command from local file
      local_action:
        module: slurp
        src: "../join-command.sh"
      register: join_command_file
      when: not kubelet_conf.stat.exists
      ignore_errors: true

    - name: Fail if join command file not found
      fail:
        msg: "Join command file not found. Run the master initialization playbook first to generate join-command.sh"
      when: not kubelet_conf.stat.exists and (join_command_file is failed or join_command_file.content is not defined)

    - name: Display join command for verification
      debug:
        msg: "Executing: {{ join_command_file.content | b64decode | trim }}"
      when: not kubelet_conf.stat.exists

    - name: Join node to cluster with detailed output
      shell: "{{ join_command_file.content | b64decode | trim }} --v=5"
      when: not kubelet_conf.stat.exists and connectivity_test is succeeded and join_command_file.content is defined
      register: join_result
      async: 600
      poll: 15
      retries: 3
      delay: 30

    - name: Display join success message
      debug:
        msg: "Node successfully joined the cluster!"
      when: join_result is defined and join_result.rc == 0

    - name: Display join errors if failed
      debug:
        msg: |
          Join failed with error:
          {{ join_result.stderr }}
          
          Troubleshooting steps:
          1. Check if master node is ready: kubectl get nodes
          2. Verify CNI is installed on master
          3. Check time synchronization between nodes
          4. Generate new join token on master: kubeadm token create --print-join-command
      when: join_result is defined and join_result.rc != 0

    - name: Check kubelet logs if join failed
      shell: journalctl -u kubelet --no-pager -n 20
      register: kubelet_logs
      when: join_result is defined and join_result.rc != 0

    - name: Display recent kubelet logs
      debug:
        var: kubelet_logs.stdout_lines
      when: kubelet_logs is defined

    - name: Verify kubelet is running
      systemd:
        name: kubelet
        state: started
        enabled: true

    - name: Wait for node to stabilize
      pause:
        seconds: 30
      when: join_result is defined and join_result.rc == 0

    - name: Verify node status
      shell: systemctl is-active kubelet
      register: kubelet_status

    - name: Display final status
      debug:
        msg: |
          Worker node {{ inventory_hostname }} status:
          Kubelet Status: {{ kubelet_status.stdout }}
          Private IP: {{ ansible_default_ipv4.address }}
          Role: {{ kubernetes_role | default('worker') }}
          
          {{ 'Join completed successfully!' if join_result is defined and join_result.rc == 0 else 'Check logs above for any issues' }}